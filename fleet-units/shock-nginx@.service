[Unit]
Description=MG-RAST Nginx
After=docker.service
Requires=docker.service


[Service]
Environment='CONTAINER=shock_nginx'
Environment='IMAGE=nginx:1.13-alpine'
Environment='SERVICE=mg-rast-nginx'

Environment='VIRTUAL_IP=140.221.76.245'
Environment='DEVICE=enp2s0f0'

Environment='SERVICE_DIR=/media/ephemeral/shock_nginx'

Restart=always
EnvironmentFile=-/etc/environment


ExecStartPre=-/bin/bash -c 'if [ %i == 1 ] ; then /usr/bin/ip addr add ${VIRTUAL_IP}/24 brd + dev ${DEVICE} ; echo "add IP ${VIRTUAL_IP} (%i)"; else echo "do not add IP (%i)" ; fi'


# get config
ExecStartPre=/bin/bash -c 'mkdir -p ~/.ssh/ ; if [ `ssh-keygen -F github.com | grep -v "^#" | wc -l` -eq "0" ]; then ssh-keyscan -H github.com >> ~/.ssh/known_hosts ; fi'
ExecStartPre=/bin/bash -c 'rm -rf ${SERVICE_DIR}/mgconf ; mkdir -p ${SERVICE_DIR} ; cd ${SERVICE_DIR} ; GIT_SSH_COMMAND="ssh -i /etc/ssh/mgrast_coreos.pem" git clone git@github.com:MG-RAST/mgconf.git'



ExecStartPre=-/bin/bash -c "/usr/bin/docker kill ${CONTAINER} > /dev/null 2>&1"
ExecStartPre=-/bin/bash -c "/usr/bin/docker rm ${CONTAINER} > /dev/null 2>&1"


ExecStart=/usr/bin/docker run  -p 80:80 --name ${CONTAINER} -v ${SERVICE_DIR}/mgconf/services/shock-server/nginx_shock.conf:/etc/nginx/conf.d/default.conf:ro ${IMAGE}



ExecStop=-/bin/bash -c 'if [ %i == 1 ] ; then /usr/bin/ip addr del ${VIRTUAL_IP}/24 dev ${DEVICE} ; fi'
ExecStop=/usr/bin/docker stop ${CONTAINER}

[X-Fleet]
Conflicts=mg-rast-nginx*
