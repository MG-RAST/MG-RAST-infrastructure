[Unit]
Description=MongoDB Replica %i watch
BindsTo=mongodb-replica-discovery@%i.service
After=mongodb-replica-discovery@%i.service

[Service]
Environment='CONTAINER=mongodb-replica-%i'
Environment='SERVICE=mongodb-replica'
EnvironmentFile=-/etc/environment
Environment='DEVICE=enp2s0f0'

# get config
EnvironmentFile=-/media/ephemeral/mongodb/mgrast-config/services/mongod/mongod.env

# if this is running on primary host, will update it every time change in etcd
# etcd watch breaks every 45 secs when updated, need to verify that a real change occurred
# 1. update virtual IP - add if primary, remove if not
# 2. update mongo hosts on primary - add if missing, remove if not in etcd

ExecStart=/bin/bash -c ' \
  export CHANNEL=$(echo %i | cut -d . -f 2); \
  if [ "$CHANNEL" == "shock" ]; then \
    VIRTUAL_IP=${SHOCK_FLOAT_IP}; \
  elif [ "$CHANNEL" == "awe" ]; then \
    VIRTUAL_IP=${AWE_FLOAT_IP}; \
  else \
    VIRTUAL_IP=${TEST_FLOAT_IP}; \
  fi; \
  export PREVIOUS=""; \
  while true; do \
    etcdctl watch --recursive /services/${SERVICE}/$CHANNEL/ > /dev/null; \
    export ACTIVE=$(for X in `etcdctl ls --sort /services/${SERVICE}/$CHANNEL`; do etcdctl get $X; done | grep -o "[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\:[0-9]*"); \
    if [ "$PREVIOUS" == "$ACTIVE" ]; then continue; fi; \
    PREVIOUS=$ACTIVE; \
    sleep 10; \
    PRIMARY=$(docker exec ${CONTAINER} mongo --quiet --eval "db.isMaster()[\\"ismaster\\"]"); \
    if [ "$PRIMARY" == "true" ]; then \
      echo "adding virtual IP $VIRTUAL_IP to primary on ${CONTAINER}"; \
      ip addr add $VIRTUAL_IP/24 brd + dev ${DEVICE}; \
      echo "updating mongodb hosts to primary on ${CONTAINER}"; \
      export HOSTS=$(docker exec ${CONTAINER} mongo --quiet --eval "db.isMaster()[\\"hosts\\"]" | tr "," "\n"); \
      for A in $ACTIVE; do \
        MISSING=1; \
        for H in $HOSTS; do \
          if [ "$A" == "$H" ]; then MISSING=0; fi; \
        done; \
        if [ $MISSING -eq 1 ]; then \
          docker exec ${CONTAINER} mongo --quiet -u ${MONGOD_ADMIN_NAME} -p ${MONGOD_ADMIN_PASS} --authenticationDatabase admin --eval "printjson(rs.add(\\"$A\\"))"; \
          echo "added $A"; \
        fi; \
      done; \
      for H in $HOSTS; do \
        MISSING=1; \
        for A in $ACTIVE; do \
          if [ "$A" == "$H" ]; then MISSING=0; fi; \
        done; \
        if [ $MISSING -eq 1 ]; then \
          docker exec ${CONTAINER} mongo --quiet -u ${MONGOD_ADMIN_NAME} -p ${MONGOD_ADMIN_PASS} --authenticationDatabase admin --eval "printjson(rs.remove(\\"$H\\"))"; \
          echo "removed $H"; \
        fi; \
      done; \
    else \
      echo "change in etcd, removing virtual IP if exists from secondary on ${CONTAINER}"; \
      ip addr del $VIRTUAL_IP/24 dev ${DEVICE}; \
    fi; \
  done'

# remove virtual IP on stop, its ok to run 'ip addr del' if doesn't exist

ExecStop=-/bin/bash -c ' \
  export CHANNEL=$(echo %i | cut -d . -f 2); \
  if [ "$CHANNEL" == "shock" ]; then \
    VIRTUAL_IP=${SHOCK_IP}; \
  elif [ "$CHANNEL" == "awe" ]; then \
    VIRTUAL_IP=${AWE_IP}; \
  else \
    VIRTUAL_IP=${TEST_IP}; \
  fi; \
  echo "Stopping, removing virtual IP if exists on ${CONTAINER}"; \
  ip addr del $VIRTUAL_IP/24 dev ${DEVICE}'

[X-Fleet]
MachineOf=mongodb-replica-discovery@%i.service
