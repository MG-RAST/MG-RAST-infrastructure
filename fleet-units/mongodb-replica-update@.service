[Unit]
Description=mongodb-server watch
BindsTo=mongodb-replica-discovery@%i.service
After=mongodb-replica-discovery@%i.service

[Service]
Environment='CONTAINER=mongodb-replica-%i'
Environment='SERVICE=mongodb-replica'
EnvironmentFile=-/etc/environment

Environment='VIRTUAL_IP=140.221.76.247'
Environment='DEVICE=enp2s0f0'

# if this is running on primary host, will update it every time change in etcd
# etcd watch breaks every 45 secs when updated, need to verify that a real change occurred
# 1. update virtual IP - add if primary, remove if not
# 2. update mongo hosts on primary - add if missing, remove if not in etcd

ExecStart=/bin/bash -c ' \
  export CHANNEL=$(echo %i | cut -d . -f 2); \
  export PREVIOUS=$(for X in `etcdctl ls --sort /clusters/${SERVICE}/$CHANNEL`; do etcdctl get $X; done); \
  while true; do \
    etcdctl watch --recursive /services/${SERVICE}/$CHANNEL/; \
    export ACTIVE=$(for X in `etcdctl ls --sort /clusters/${SERVICE}/$CHANNEL`; do etcdctl get $X; done); \
    if [ "$PREVIOUS" == "$ACTIVE" ]; then \
      continue; \
    fi; \
    PREVIOUS=$ACTIVE; \
    export PRIMARY=$(docker exec ${CONTAINER} mongo --quiet --eval "db.isMaster()[\\"primary\\"]" | cut -d : -f 1); \
    if [ "$PRIMARY" == "${COREOS_PUBLIC_IPV4}" ]; then \
      echo "Adding virtual IP ${VIRTUAL_IP} to primary on ${CONTAINER}"; \
      ip addr add ${VIRTUAL_IP}/24 brd + dev ${DEVICE}; \
      echo "Updating mongodb hosts to primary on ${CONTAINER}"; \
      export HOSTS=$(docker exec ${CONTAINER} mongo --quiet --eval "db.isMaster()[\"hosts\"]" | tr "," "\n"); \
      for A in $ACTIVE; do \
        MISSING=1; \
        for H in $HOSTS; do \
          if [ "$A" == "$H" ]; then MISSING=0; fi; \
        done; \
        if [ $MISSING -eq 1 ]; then \
          docker exec ${CONTAINER} mongo --quiet --eval "rs.add(\\"$A\\")"; \
          echo "Added $A"; \
        fi; \
      done; \
      for H in $HOSTS; do \
        MISSING=1; \
        for A in $ACTIVE; do \
          if [ "$A" == "$H" ]; then MISSING=0; fi; \
        done; \
        if [ $MISSING -eq 1 ]; then \
          docker exec ${CONTAINER} mongo --quiet --eval "rs.remove(\\"$H\\")"; \
          echo "Removed $H"; \
        fi; \
      done; \
    else; \
      echo "Change in etcd, removing virtual IP if exists from secondary on ${CONTAINER}"; \
      ip addr del ${VIRTUAL_IP}/24 dev ${DEVICE}; \
    fi; \
  done'


[X-Fleet]
MachineOf=mongodb-replica-discovery@%i.service