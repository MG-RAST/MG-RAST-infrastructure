[Unit]
Description=Cassandra Simple %i
After=docker.service
Requires=docker.service

[Service]
Environment='CONTAINER=cassandra-simple'
Environment='SERVICE_DIR=/media/ephemeral/cassandra-simple'
Environment='IMAGE=mgrast/cassandra:3.7'


TimeoutStartSec=0
Restart=always
RestartSec=10
EnvironmentFile=-/etc/environment


ExecStartPre=/bin/mkdir -p ${SERVICE_DIR}/data ${SERVICE_DIR}/commitlog ${SERVICE_DIR}/saved_caches
ExecStartPre=/bin/chattr -R +C ${SERVICE_DIR}/data

# get config
ExecStartPre=/bin/bash -c 'mkdir -p ~/.ssh/; if [ `ssh-keygen -F gitlab.cels.anl.gov | grep -v "^#" | wc -l` -eq "0" ]; then ssh-keyscan -H gitlab.cels.anl.gov >> ~/.ssh/known_hosts; fi'
ExecStartPre=/bin/bash -c 'eval $(ssh-agent); ssh-add /etc/ssh/mgrast_coreos.pem; rm -rf ${SERVICE_DIR}/mgrast-config; cd ${SERVICE_DIR}; git clone git@gitlab.cels.anl.gov:MG-RAST/mgrast-config.git'

# clear containers
ExecStartPre=-/bin/bash -c "/usr/bin/docker kill ${CONTAINER} > /dev/null 2>&1"
ExecStartPre=-/bin/bash -c "/usr/bin/docker rm ${CONTAINER} > /dev/null 2>&1"


# create SSL keys/certificates
ExecStartPre=/usr/bin/docker run -ti --rm -e COREOS_PRIVATE_IPV4=${COREOS_PRIVATE_IPV4} -v ${SERVICE_DIR}/mgrast-config/services/cassandra/config:/config -v ${SERVICE_DIR}/ssl:/ssl ${IMAGE} /config/ssl.sh

#  make sure seed gets lock
ExecStartPre=/media/ephemeral/cassandra-simple/mgrast-config/services/cassandra/get_lock.sh

ExecStart=/bin/bash -c '\
  export INSTANCE_NAME=%i ; \
  export SERVICE_DIR=${SERVICE_DIR} ; \
  export CONTAINER=${CONTAINER} ; \
  export COREOS_PUBLIC_IPV4=${COREOS_PUBLIC_IPV4} ; \
  export IMAGE=${IMAGE} ; \
  ${SERVICE_DIR}/mgrast-config/services/cassandra/run_cassandra.sh'

ExecStop=/usr/bin/docker stop ${CONTAINER}

[X-Fleet]
Conflicts=solr-metagenome@*.service
Conflicts=cassandra-simple@*.service

