[Unit]
Description=mysql replica server
After=docker.service
Requires=docker.service

[Service]
Environment='CONTAINER=mysql-replica-metadata-%i'
Environment='IMAGE=mysql/mysql-server'
Environment='SERVICE=mysql_metadata'

Environment='PORT=3306'

#Environment='VIRTUAL_IP=140.221.76.248'
#Environment='DEVICE=enp2s0f0'


#Restart=always
TimeoutStartSec=0
EnvironmentFile=-/etc/environment


#ExecStartPre=-/bin/bash -c 'if [ %i == 1 ] ; then /usr/bin/ip addr add ${VIRTUAL_IP}/24 brd + dev ${DEVICE} ; echo "add IP ${VIRTUAL_IP} (%i)"; else echo "do not add IP (%i)" ; fi'


# data directory
Environment='DIR=/media/ephemeral/mysql_metadata-%i'

ExecStartPre=/bin/bash -c 'mkdir -p ~/.ssh/ ; if [ `ssh-keygen -F git.mcs.anl.gov | grep -v "^#" | wc -l` -eq "0" ]; then ssh-keyscan -H git.mcs.anl.gov >> ~/.ssh/known_hosts ; fi'
ExecStartPre=/bin/bash -c 'eval $(ssh-agent) ; ssh-add /etc/ssh/mgrast_coreos.pem ; if cd /home/core/mgrast-config; then git pull; else cd /home/core/ ; git clone git@git.mcs.anl.gov:mgrast-config.git ; fi'


# prepare directories
ExecStartPre=/usr/bin/mkdir -p ${DIR}/log/ ${DIR}/data/ ${DIR}/log-bin/
ExecStartPre=/usr/bin/chmod 777 ${DIR}/log/ ${DIR}/data/ ${DIR}/log-bin/


# remove old container
ExecStartPre=-/usr/bin/docker kill ${CONTAINER} 
ExecStartPre=-/usr/bin/docker rm ${CONTAINER}

# download docker image
ExecStartPre=/home/core/skycore pull --tag=latest etcd:${SERVICE}

# become master if there is none 
# reset with: /usr/bin/etcdctl set /services/mysql_replica_metadata/master none
ExecStartPre=-/usr/bin/etcdctl set --swap-with-value none /services/mysql_replica_metadata/master '%i'

# create arguments for master/slave
ExecStartPre=/bin/bash -c "set -x ; \
  export SERVER=`/usr/bin/etcdctl get /services/mysql_replica_metadata/master` ; \
  if [ $SERVER -eq \"%i\" ] ; then \
    echo \"I am master\" ; /usr/bin/etcdctl set /services/mysql_replica_metadata/server/%i/state master ; \
  else \
    echo \"I am slave\" ; \
    /usr/bin/etcdctl set /services/mysql_replica_metadata/server/%i/state slave; \
    /usr/bin/etcdctl set /services/mysql_replica_metadata/server/%i/args \"--report-host=$SERVER --report-port=${PORT}\"; \
  fi"



# TODO init mysql 
# -v ${DIR}/staging/:/mnt/

### Start MySQL ###

ExecStart=/bin/bash -c "set -x ; export ARGS=`/usr/bin/etcdctl get /services/mysql_replica_metadata/server/%i/args` ; echo \"using args: $ARGS\" /usr/bin/docker run --name ${CONTAINER} --rm -p ${PORT}:3306 -v  ${DIR}/log-bin/:/replica/mysql-bin/:rw -v ${DIR}/data/:/var/lib/mysql/:rw -v ${DIR}/log/:/var/log/mysqld/:rw -v /home/core/mgrast-config/services/mysql_metadata/mysql_replica.cnf:/etc/my.cnf -e MYSQL_ROOT_PASSWORD=test ${IMAGE} mysqld --server-id=%i $ARGS"

#ExecStartPost=-/bin/bash -c 'if [ %i == 1 ] ; then /usr/sbin/arping -A -c 2 -I ${DEVICE} ${VIRTUAL_IP} ; fi'


#ExecStop=-/bin/bash -c 'if [ %i == 1 ] ; then /usr/bin/ip addr del ${VIRTUAL_IP}/24 dev ${DEVICE} ; fi'
ExecStop=-/usr/bin/docker stop ${CONTAINER}

[X-Fleet]
Conflicts=${SERVICE}@*.service
Conflicts=mysql_metadata@*.service

