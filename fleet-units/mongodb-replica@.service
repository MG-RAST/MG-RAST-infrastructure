[Unit]
Description=MongoDB Replica %i
After=docker.service
Requires=docker.service
Wants=mongodb-replica-discovery@%i.service

[Service]
Environment='CONTAINER=mongodb-replica-%i'
Environment='IMAGE=mongo'
Environment='SERVICE=mongodb-replica'

TimeoutStartSec=0
Restart=always

EnvironmentFile=-/etc/environment

ExecStartPre=-/usr/bin/docker kill ${CONTAINER}
ExecStartPre=-/usr/bin/docker rm ${CONTAINER}

ExecStartPre=/home/core/skycore pull --tag=latest etcd:${SERVICE}

# don't remove dir if no servers running
# for now do not remove at all
# ExecStartPre=/bin/bash -c ' \
#   export CHANNEL=$(echo %i | cut -d . -f 2); \
#   export NUM=$(/usr/bin/etcdctl ls /services/mongodb-replica/$CHANNEL 2> /dev/null | wc -l); \
#   if [ $NUM -gt 0 ]; \
#     then /usr/bin/rm -rf /media/ephemeral/mongodb-$CHANNEL; \
#   fi'

ExecStartPre=/bin/bash -c ' \
  export CHANNEL=$(echo %i | cut -d . -f 2); \
  /usr/bin/mkdir -p /media/ephemeral/mongodb-$CHANNEL; \
  /usr/bin/chattr -R +C /media/ephemeral/mongodb-$CHANNEL'

ExecStart=/bin/bash -c ' \
  export CHANNEL=$(echo %i | cut -d . -f 2); \
  /usr/bin/docker run --rm --name ${CONTAINER} -v /media/ephemeral/mongodb-$CHANNEL:/data/db -p 27017:27017 ${IMAGE} mongod --dbpath /data/db --replSet $CHANNEL'

#This should only run on primary
#ExecStartPost=/bin/bash -c ' \
#  export CHANNEL=$(echo %i | cut -d . -f 2); \
#  export STATUS=1; \
#  until [ $STATUS -eq 0 ]; \
#  do /usr/bin/sleep 1; \
#  /usr/bin/docker exec ${CONTAINER} mongo --quit --eval "printjson(rs.initiate({_id:\\"$CHANNEL\\",members:[{_id:0,host:\\"${COREOS_PUBLIC_IPV4}:27017\\"}]}))"; \
#  STATUS=$?; \
#  done'

ExecStop=-/usr/bin/docker stop ${CONTAINER}

[X-Fleet]
Conflicts=${SERVICE}@*.service
Conflicts=solr-m5nr@*.service
Conflicts=solr-metagenome@*.service
Conflicts=mysql_metadata@*.service
MachineMetadata=RAM_GB=39
MachineMetadata=RAM_GB=47
MachineMetadata=RAM_GB=71
