[Unit]
Description=mysql galera server
After=docker.service
Requires=docker.service



# Instructions to start fresh empty cluster:
# > etcdctl rm --recursive /services/mysql_galera_metadata/
# > etcdctl set /services/mysql_galera_metadata/initnode none

# initnode is a lock that ensures that (only) the first node creates the cluster (avoids split-brain)


[Service]
Environment='CONTAINER=mysql-galera-metadata-%i'
Environment='IMAGE=mysql-galera'
Environment='SERVICE=mysql_galera_metadata'

TimeoutStartSec=0
EnvironmentFile=-/etc/environment




# data directory
Environment='DIR=/media/ephemeral/mysql_galera_metadata'
Environment='PORT3306=3306'
Environment='PORT4567=4567'
Environment='PORT4568=4568'
Environment='PORT4444=4444'


ExecStartPre=/bin/bash -c 'mkdir -p ~/.ssh/ ; if [ `ssh-keygen -F git.mcs.anl.gov | grep -v "^#" | wc -l` -eq "0" ]; then ssh-keyscan -H git.mcs.anl.gov >> ~/.ssh/known_hosts ; fi'
ExecStartPre=/bin/bash -c 'eval $(ssh-agent) ; ssh-add /etc/ssh/mgrast_coreos.pem ; if cd /home/core/mgrast-config; then git pull; else cd /home/core/ ; git clone git@git.mcs.anl.gov:mgrast-config.git ; fi'


# prepare directories
ExecStartPre=-/usr/bin/rm -rf ${DIR}
ExecStartPre=/usr/bin/mkdir -p ${DIR}/log/ ${DIR}/data/ ${DIR}/log-bin/ ${DIR}/staging
ExecStartPre=/usr/bin/chmod 777 ${DIR}/log/ ${DIR}/data/ ${DIR}/log-bin/ ${DIR}/staging


# remove old container
ExecStartPre=-/usr/bin/docker kill ${CONTAINER} 
ExecStartPre=-/usr/bin/docker rm ${CONTAINER}

# download docker image
ExecStartPre=/home/core/skycore pull --tag=latest etcd:${SERVICE}


ExecStartPre=/bin/bash -c "set -x ; \
  export IMAGE=${IMAGE} ; \
  export CONTAINER=${CONTAINER} ; \
  export PORT=${PORT3306} ; \
  export DIR=${DIR} ; \
  /home/core/mgrast-config/services/mysql_metadata/mysql_replica_init.sh "

# create arguments for init / follower nodes
ExecStartPre=/bin/bash -c "set -x ; \
  /usr/bin/etcdctl set --swap-with-value none /services/${SERVICE}/initnode '${COREOS_PUBLIC_IPV4}' ;\
  export INITNODE=`/usr/bin/etcdctl get /services/${SERVICE}/initnode ` ; \
  echo \"INITNODE is $INITNODE\" ; \
  if [ \"$INITNODE x\" = \"${COREOS_PUBLIC_IPV4} x\" ] ; then \
    echo \"I am initnode\" ; \
    /usr/bin/etcdctl set /services/${SERVICE}/server/${SERVICE}@%i/args \"wsrep-new-cluster\"; \
    /usr/bin/etcdctl set /services/${SERVICE}/initnode 'lock' ;\
  else \
    echo \"I am normal node, I wait for other nodes\" ; \
    while [ x$ACTIVE == \"x\" ] ; \
      do export ACTIVE=$(for X in `etcdctl ls --sort /services/mysql_galera_metadata/server`; do etcdctl get $X/discovery; done | grep -o \"COREOS_PUBLIC_IPV4\\\":\\\"[0-9\.]*\\\"\" | grep -o \"[0-9\.]*\" | tr '\n' ',') ;\
      sleep 1 ; \
    done ;
    /usr/bin/etcdctl set /services/${SERVICE}/server/${SERVICE}@%i/args \"wsrep_cluster_address=gcomm://$ACTIVE\"; \
  fi"





### Start MySQL ###

ExecStart=/bin/bash -c "set -x ; \
  export COMMAND=`/usr/bin/etcdctl get /services/${SERVICE}/server/${SERVICE}@%i/args` ; \
  echo \"using args: $COMMAND\" ; \
  /usr/bin/docker run --name ${CONTAINER} --rm \
    -p ${PORT3306}:3306 \
    -p ${PORT4567}:4567 \
    -p ${PORT4568}:4568 \
    -p ${PORT4444}:4444 \
    -v ${DIR}/log-bin/:/log-bin/:rw \
    -v ${DIR}/data/:/var/lib/mysql/:rw \
    -v ${DIR}/log/:/var/log/mysql/:rw \
    -v ${DIR}/staging/:/staging:ro \
    -v /home/core/mgrast-config/services/mysql_metadata/mysql_galera.cnf:/etc/my.cnf \
    --entrypoint=/bin/bash \
    ${IMAGE} \
   -c \"chmod -R 777 /var/log/mysql/ /log-bin/ /var/lib/mysql/ ; chown -R mysql:mysql /var/log/mysql/ /log-bin/ /var/lib/mysql/ ; mysqld  --wsrep_node_name=%i --wsrep_node_address=${COREOS_PUBLIC_IPV4}:${PORT4567} --$COMMAND \""


ExecStop=-/usr/bin/docker stop ${CONTAINER}

[X-Fleet]
Conflicts=mysql_galera_metadata@*.service
Conflicts=mysql_metadata@*.service

